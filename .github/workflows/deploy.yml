name: Build and Deploy


on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


env:
  applicationfolder: java-test-junior-developer
  AWS_REGION: us-east-2
  S3BUCKET: codedeploystack-webappdeploymentbucket-s8ellgo36zsw


jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PIPELINE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PIPELINE_AWS_SECRET_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and Package Maven
        #        id: package
        #        working-directory: ${{ env.applicationfolder }}
        run: mvn -B package --file pom.xml

      - name: Upload Artifact to s3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp *.jar s3://${{ env.S3BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PIPELINE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PIPELINE_AWS_SECRET_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
          commit_hash=`git rev-parse HEAD`
          aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures